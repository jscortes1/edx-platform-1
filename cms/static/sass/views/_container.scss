// studio - views - container
// ==========================
// The container view renders xblocks three levels deep: Page Level, Nesting Level, and Element Level.

// For containers rendered at the element level, the container is rendered in a way that allows the user to navigate to a separate container page for that container making its children populate the nesting and element levels.

// UI: container page view
body.view-container {

  .mast {
    border-bottom: none;
    padding-bottom: 0;
  }

  .content-primary {
    float: left;
    clear: both;
    width: 70%;
  }

  .content-supplementary {
    float: right;
    padding: $baseline;
    width: 28%;

    label {
      @extend %t-title8;
    }
  }
}

// UI: xblock rendering
body.view-container  .content-primary{

  .wrapper-xblock {

    // CASE: page level xblock rendering
    &.level-page {
      @include wrap-xblock;
      margin: 0;

      .xblock-header {
        display: none;
      }
    }

    // CASE: nesting level xblock rendering
    &.level-nesting {
      @include wrap-xblock;
      border: none;
      padding-bottom: $baseline;
      box-shadow: none;

      &:hover {
        @include transition(all $tmg-f2 linear 0s);
        background-color: $gray-l7;
        box-shadow: 0 0 1px $shadow-d2 inset;
      }

      .xblock-header {
        margin-bottom: ($baseline/2);
        border-bottom: none;
        background: none;
      }
    }

    // CASE: element level xblock rendering
    &.level-element {
      @include wrap-xblock;
      margin: 0 ($baseline*2) $baseline ($baseline*2);
      box-shadow: none;

      &:hover {
        @include transition(all $tmg-f2 linear 0s);
        border-color: $blue;
      }

      .xblock-header {
        margin-bottom: 0;
        font-weight: 300;
        font-size: .9em;
      }

      .xblock-render {
        margin: $baseline;
      }

      // STATE: xBlock containers styled as rows.
      &.xblock-type-container {

        .xblock-header {
          margin-bottom: 0;
          border-bottom: 0;
          border-radius: ($baseline/5);

          .xblock-details {
            font-size: .9em;
          }
        }

        .xblock-render {
          display: none;
        }
      }
    }
  }
}

//   .xblock-wrapper-pagelevel {
//     margin: 0;

//     .xblock-header {
//       display: none;

//       .xblock-details {
//         font-size: 1.1em;
//       }
//     }

//     .xblock-render {
//       background: none;
//     }
//   }

//   // UI: xBlock Nesting Level
//   .xblock-wrapper-nestinglevel {
//     margin: ($baseline/2);
//     border: none;
//     padding-bottom: $baseline;
//     box-shadow: none;

//     &:hover {
//       background-color: $gray-l7;
//       box-shadow: 0 0 1px $shadow-d2 inset;
//     }

//     .xblock-header {
//       display: flex;
//       margin-bottom: ($baseline/2);
//       border-bottom: none;
//       background: none;
//       box-shadow: none;

//       .xblock-details {
//         font-size: 1em;
//       }
//     }
//   }

//   // UI: xBlock Element Level
//   .xblock-wrapper-elementlevel {
//     margin: 0 ($baseline*2) $baseline ($baseline*2);
//     border-radius: ($baseline/4);
//     background-color: $white;
//     box-shadow: none;

//     &:hover {
//       @include transition(all $tmg-f2 linear 0s);
//       border-color: $blue;
//       box-shadow: 0 0 1px $shadow-d1;
//     }

//     .xblock-header {
//       margin-bottom: 0;
//       border-bottom: 1px solid $gray-l4;
//       background-color: $gray-l6;
//       font-weight: 300;
//       font-size: .9em;
//     }

//     // STATE: xBlock containers styled as rows, similarly to on unit page.
//     &.xblock-type-container {

//       .xblock-header {
//         margin-bottom: 0;
//         border-bottom: 0;
//         border-radius: ($baseline/5);

//         .xblock-details {
//           font-size: .9em;
//         }
//       }

//       .xblock-render {
//         display: none;
//       }
//     }
//   }
// }
